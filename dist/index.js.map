{"version":3,"sources":["../src/index.js"],"names":["app","get","req","res","json","message","use","graphiql","schema","context","messageId","main","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA;AAEAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAAEC,GAAF,EAAOC,GAAP,EAAc;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AACLC,IAAAA,OAAO,EAAE;AADJ,GAAT;AAGH,CAJD;AAMAL,GAAG,CAACM,GAAJ,CAAQ,UAAR,EAAoB,gCAAY;AAC5BC,EAAAA,QAAQ,EAAG,IADiB;AAE5BC,EAAAA,MAAM,EAAEA,kBAFoB;AAG5BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAG;AADP;AAHmB,CAAZ,CAApB;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfX,EAAAA,GAAG,CAACY,MAAJ,CAAW,IAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,CAHD;;AAKAH,IAAI","sourcesContent":["import \"@babel/polyfill\";\nimport express from \"express\"\nimport graphqlHTTP from \"express-graphql\"\nimport schema from \"./schema\"\n\nimport { connect } from \"./database\";\n\nconst app = express()\nconnect()\n\napp.get('/', ( req, res )=>{\n    res.json({\n        message: 'Visit de route /graphql'\n    })\n})\n\napp.use('/graphql', graphqlHTTP({\n    graphiql : true,\n    schema: schema,\n    context: {\n        messageId : 'test'\n    }\n}))\n\nconst main = () => {\n    app.listen(3000)\n    console.log('server on port 3000')\n}\n\nmain()"],"file":"index.js"}